# need to port-forward: datastore,rabbitmq,results(summary,sast),feedbackapp
# To add opentelemetry agent:
#   -javaagent:"c:\cxdev\tools\opentelemetry\opentelemetry-javaagent.jar"
#    -Dotel.javaagent.extensions=$ProjectFileDir$\publisher-common\target\publisher-common-0.0.1.jar

# Enable/disable all tracing
OTEL_JAVAAGENT_ENABLED=true
OTEL_TRACES_SAMPLER=healthExcluding
OTEL_METRICS_EXPORTER=none
OTEL_SERVICE_NAME=flow-publisher-local
OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317

#OTEL_TRACES_SAMPLER=healthExcluding
#OTEL_JAVAAGENT_EXTENSIONS=c:\cxdev\CxIntegrations\ast-flow-publisher\publisher-common\target\publisher-common-0.0.1.jar
#OTEL_JAVAAGENT_LOGGING=application

# In k8s, health probes are enabled automatically. If working locally, we need to enable them explicitly.
#MANAGEMENT_ENDPOINT_HEALTH_PROBES_ENABLED=true

PORT=5521
#AST_BASE_URI=https://app-tamarlevicluster.integrations-dev.cxast.net
GRPC_PORT=5436

RABBITMQ_ENABLED=false
RABBITMQ_MAX_WORKER_THREADS=1
RABBITMQ_CONNECTION_STRING=amqp://cxrabbit:Cx!123456@127.0.0.1:5672/
RABBITMQ_RECONNECT_INTERVAL=3s

DATASTORE_GRPC_ADDR=localhost:5437
FEEDBACKAPP_GRPC_ADDR=localhost:5438
REPOS_MANAGER_GRPC_ADDR=localhost:5435
SAST_RESULTS_GRPC_ADDR=localhost:26500
SCANS_GRPC_ADDR=localhost:26501
RESULTS_SUMMARY_GRPC_ADDR=localhost:26502
KICS_RESULTS_GRPC_ADDR=localhost:26503
SCA_RESULTS_GRPC_ADDR=localhost:26504
EMAILER_GRPC_ADDR=localhost:4978
# different from default 26503 to avoid conflicts
APPLICATIONS_GRPC_ADDRESS=localhost:28503

# different from default 26502 to avoid conflict with ast-core-results
SCANS_PROJECTS_GRPC_ADDR=localhost:28502
# different from default 26500 to avoid conflicts
FEATURE_FLAG_GRPC_ADDR=localhost:28500

GITHUB_TEST_TOKEN=
TEST_AZURE_ACCESS_TOKEN=
TEST_JIRA_CLOUD_USERNAME=
TEST_JIRA_CLOUD_TOKEN=

# Get scan events from policy-manager
BREAK_BUILD_ENABLED=true

# OneLog
LOG_STACKTRACE=true
PLAIN_TEXT_LOG_FORMAT=true
SOURCE_CODE_LOCATION=true